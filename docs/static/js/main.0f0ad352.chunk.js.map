{"version":3,"sources":["styles/CurrencyCalcualtorStyles.ts","components/formFields/CurrencyValueInput.tsx","components/formFields/CurrencyTypeInput.tsx","components/historyData/historyDataContext.tsx","styles/app.ts","components/formFields/CurrencyValueResult.tsx","api/currencyExchangeRate.ts","api/currencyTypes.ts","shared/currencyFormYupShema.ts","dictionary.ts","pages/CurrencyCalcualtor.tsx","styles/CalculatorHistoryStyles.ts","pages/CalculatorHistory.tsx","components/historyData/historyDataProvider.tsx","styles/defualtTheme.tsx","App.tsx","pages/error.tsx","components/ErrorBoundary.tsx","index.tsx"],"names":["Heading","styled","Typography","theme","textAlign","color","palette","primary","main","textShadow","fontWeight","fontSize","breakpoints","up","SubHeading","dark","RootStyle","backgroundColor","border","boxShadow","borderRadius","width","height","CustomStyledButton","LoadingButton","common","white","MainFormButtonsWrapper","margin","spacing","position","alignSelf","CurrencyTypesWrapper","display","gridTemplateColumns","alignItems","CurrencyValueInput","name","adormentFieldName","rest","adormentFieldValue","useWatch","rules","required","disabled","render","field","fieldState","InputProps","readOnly","endAdornment","helperText","error","message","CurrencyTypeInput","data","placeholder","optonsData","useMemo","Object","values","options","value","onChange","_event","newValue","id","inputValue","onInputChange","getOptionLabel","option","renderInput","params","size","label","variant","HistoryDataContext","createContext","get","push","clear","RootElementStyle","flexDirection","down","FormLayoutWrapper","justifyContent","marginBottom","marginTop","marginLeft","marginRight","CurrencyValueResult","watchFieldValue","fullWidth","a","inCurrencyType","outCurrencyType","fetch","json","val","useCurrencyTypesQuery","useQuery","getCurrencyTypes","results","currencyValueSchema","yup","typeError","min","currencyTypeSchema","schema","inCurrencyValue","outCurrencyValue","dictionary","clearHistoryButton","toggleHistoryView","show","hide","table","sourceCurrencyHeading","targetCurrencyHeading","dateHeading","mainHeading","subHeading","currencyCalculatorDict","convertButton","currencyTypesLoadingError","conversionError","CurrencyCalcualtor","useState","open","setOpen","currencyTypesData","status","historyDataContext","useContext","handleClose","event","reason","currencyTypes","errorCallback","submitCallback","autoHideDuration","onClose","severity","CurrencyExchangeForm","methods","useForm","defaultValues","resolver","yupResolver","mode","handleSubmit","isSubmitting","formState","setValue","getValues","onSubmit","getExchangeRate","then","rate","shouldDirty","catch","autoComplete","autoSelect","onClick","CurrencyTypeIn","CurrencyTypeOut","type","loading","CustomButtonsWrapper","shouldForwardProp","prop","vertical","CustomButton","Button","minWidth","lineHeight","textOrientation","writingMode","padding","TableWrapper","flexGrow","overflowY","StyledTable","Table","scrollbarColor","black","isOpen","transform","paddingTop","currencyHistoryDict","CalculatorHistory","history","useHistory","toggleHistoryPage","transferHistoryData","HistoryDataTable","HistoryHeading","isOpened","toggleHistoryPageCallback","component","style","align","map","row","scope","dateOfConversion","toISOString","replace","toFixed","toString","startIcon","undefined","HistoryDataProvider","children","historyData","setHistoryData","useEffect","localData","localStorage","getItem","currencyConversionHistoryData","JSON","parse","key","Date","useCallback","newHistoryData","setItem","stringify","removeItem","Provider","createTheme","contrastText","light","secondary","typography","fontFamily","fontWeightMedium","fontWeightRegular","components","MuiCssBaseline","styleOverrides","body","minHeight","background","textDecoration","App","queryClientRef","useRef","current","QueryClient","defaultOptions","queries","refetchOnWindowFocus","refetchOnMount","retry","staleTime","QueryClientProvider","client","loader","ThemeProvider","path","errorPageDict","ErrorPage","ErrorBoundary","props","state","hasError","this","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f0ad352.chunk.js","sourcesContent":["import LoadingButton from '@mui/lab/LoadingButton';\r\nimport { Typography } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\n\r\nexport const Heading = styled(Typography)(({ theme }) => ({\r\n  textAlign: 'center',\r\n  color: theme.palette.primary.main,\r\n  textShadow: '1px 1px grey',\r\n  fontWeight: 'bold',\r\n  fontSize: '1.4rem',\r\n  [theme.breakpoints.up('sm')]: {\r\n    fontSize: '2.5rem'\r\n  },\r\n  padding: '40px 0'\r\n}));\r\n\r\nexport const SubHeading = styled(Typography)(({ theme }) => ({\r\n  textAlign: 'center',\r\n  color: theme.palette.primary.dark,\r\n  fontWeight: 'normal',\r\n  fontSize: '0.8rem',\r\n  [theme.breakpoints.up('sm')]: {\r\n    fontSize: '1.5rem'\r\n  },\r\n  padding: '40px 0'\r\n}));\r\n\r\nexport const RootStyle = styled('div')(({ theme }) => ({\r\n  backgroundColor: 'rgb(255, 255, 255)',\r\n  border: '1px solid grey',\r\n  boxShadow: '0px 0px 5px grey',\r\n  borderRadius: '10px',\r\n  width: '400px',\r\n  height: '400px',\r\n  [theme.breakpoints.up('md')]: {\r\n    width: '500px',\r\n    height: '500px'\r\n  },\r\n  margin: 4,\r\n  padding: 8,\r\n  zIndex: 100,\r\n  display: 'flex',\r\n  flexDirection: 'column'\r\n}));\r\n\r\nexport const CustomStyledButton = styled(LoadingButton)(({ theme }) => ({\r\n  width: '100%',\r\n  color: theme.palette.common.white,\r\n  backgroundColor: theme.palette.primary.main\r\n}));\r\n\r\nexport const MainFormButtonsWrapper = styled('div')(({ theme }) => ({\r\n  margin: `${theme.spacing(1)} auto ${theme.spacing(3)} auto`,\r\n  position: 'relative',\r\n  width: 'min-content',\r\n  alignSelf: 'center'\r\n}));\r\n\r\nexport const CurrencyTypesWrapper = styled('div')(() => ({\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr);',\r\n  textAlign: 'center',\r\n  alignItems: 'center'\r\n}));\r\n","import { ReactElement } from 'react';\r\nimport { TextField, InputAdornment, TextFieldProps } from '@mui/material';\r\nimport { Controller, useWatch } from 'react-hook-form';\r\n\r\ninterface IProps<T> extends Omit<TextFieldProps, 'name'> {\r\n  name: Extract<keyof T, string>;\r\n  adormentFieldName: Extract<keyof T, string>;\r\n}\r\n\r\nexport function CurrencyValueInput<T>({\r\n  name,\r\n  adormentFieldName,\r\n  ...rest\r\n}: IProps<T>): ReactElement {\r\n  const adormentFieldValue = useWatch({\r\n    name: adormentFieldName\r\n  });\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      rules={{ required: rest.disabled }}\r\n      render={({ field, fieldState }) => {\r\n        return (\r\n          <TextField\r\n            {...rest}\r\n            InputProps={{\r\n              readOnly: rest.disabled,\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {adormentFieldValue}\r\n                </InputAdornment>\r\n              )\r\n            }}\r\n            {...field}\r\n            helperText={fieldState.error?.message ?? ' '}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { ReactElement, useMemo } from 'react';\r\nimport { TextField, Autocomplete, AutocompleteProps } from '@mui/material';\r\nimport { Controller } from 'react-hook-form';\r\nimport { ICurrencyType, TCurrencyTypes } from 'shared/globalTypes';\r\n\r\ninterface IProps<T>\r\n  extends Omit<\r\n    AutocompleteProps<ICurrencyType, undefined, undefined, undefined>,\r\n    | 'name'\r\n    | 'options'\r\n    | 'value'\r\n    | 'onChange'\r\n    | 'inputValue'\r\n    | 'onInputChange'\r\n    | 'getOptionLabel'\r\n    | 'renderInput'\r\n  > {\r\n  placeholder: string;\r\n  data: TCurrencyTypes;\r\n  name: Extract<keyof T, string>;\r\n}\r\n\r\nexport function CurrencyTypeInput<T>({\r\n  name,\r\n  data,\r\n  placeholder,\r\n  ...rest\r\n}: IProps<T>): ReactElement {\r\n  const optonsData = useMemo(() => data && Object.values(data), [data]);\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      render={({ field, fieldState }) => {\r\n        return (\r\n          <Autocomplete<ICurrencyType, undefined, undefined, undefined>\r\n            {...rest}\r\n            options={optonsData}\r\n            value={data[field.value] ?? null}\r\n            onChange={(\r\n              _event: unknown,\r\n              newValue: ICurrencyType | null\r\n            ): void => {\r\n              field.onChange(newValue?.id ?? '');\r\n            }}\r\n            inputValue={(field.value as string) ?? ''}\r\n            onInputChange={(_event: unknown, newValue: string | null): void => {\r\n              field.onChange(newValue);\r\n            }}\r\n            getOptionLabel={(option: ICurrencyType): string => option.id}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                size=\"small\"\r\n                label={placeholder}\r\n                variant=\"outlined\"\r\n                helperText={fieldState.error?.message ?? ' '}\r\n              />\r\n            )}\r\n          />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n}\r\n","import { createContext } from 'react';\r\nimport { IHistoryData, ICurrencyFormFields } from 'shared/globalTypes';\r\n\r\nexport interface IHistoryDataContext {\r\n  get: () => Array<IHistoryData>;\r\n  push: (data: ICurrencyFormFields) => void;\r\n  clear: () => void;\r\n}\r\n\r\nexport const HistoryDataContext = createContext<IHistoryDataContext>({\r\n  get: () => {\r\n    return [];\r\n  },\r\n  push: (data: ICurrencyFormFields) => {\r\n    return;\r\n  },\r\n  clear: () => {\r\n    return null;\r\n  }\r\n});\r\n","import { styled } from '@mui/system';\r\n\r\nexport const RootElementStyle = styled('div')(({ theme }) => ({\r\n  margin: 'auto',\r\n  height: 'inherit',\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  [theme.breakpoints.down('sm')]: {\r\n    flexDirection: 'column'\r\n  },\r\n  minHeight: 'inherit',\r\n  justifyContent: 'center',\r\n  alignItems: 'center'\r\n}));\r\n\r\nexport const FormLayoutWrapper = styled('div')(({ theme }) => ({\r\n  height: '100%',\r\n  display: 'flex',\r\n  justifyContent: 'center',\r\n\r\n  flexDirection: 'column',\r\n  '& > *': {\r\n    marginBottom: 10,\r\n    marginTop: 10,\r\n    marginLeft: 5,\r\n    marginRight: 5\r\n  },\r\n  [theme.breakpoints.up('sm')]: {\r\n    '& > *': {\r\n      marginBottom: 15,\r\n      marginTop: 15,\r\n      marginLeft: 20,\r\n      marginRight: 20\r\n    }\r\n  },\r\n  '& > .currencyTypeSelectors': {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'space-around'\r\n  }\r\n}));\r\n","import { ReactElement } from 'react';\r\nimport { TextField, InputAdornment } from '@mui/material';\r\nimport { useWatch } from 'react-hook-form';\r\n\r\ninterface IProps<T> {\r\n  placeholder: string;\r\n  name: Extract<keyof T, string>;\r\n  adormentFieldName: Extract<keyof T, string>;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport function CurrencyValueResult<T>({\r\n  name,\r\n  placeholder,\r\n  adormentFieldName,\r\n  disabled = false\r\n}: IProps<T>): ReactElement {\r\n  const watchFieldValue = useWatch({\r\n    name\r\n  });\r\n  const adormentFieldValue = useWatch({\r\n    name: adormentFieldName\r\n  });\r\n\r\n  return (\r\n    <TextField\r\n      placeholder={placeholder}\r\n      fullWidth\r\n      name={name}\r\n      value={watchFieldValue}\r\n      InputProps={{\r\n        readOnly: disabled,\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">{adormentFieldValue}</InputAdornment>\r\n        )\r\n      }}\r\n    />\r\n  );\r\n}\r\n","interface IApiProps {\r\n  inCurrencyType: string;\r\n  outCurrencyType: string;\r\n}\r\n\r\nexport async function getExchangeRate({\r\n  inCurrencyType,\r\n  outCurrencyType\r\n}: IApiProps): Promise<number | never> {\r\n  const data: Record<string, { val: number }> = await (\r\n    await fetch(\r\n      'https://free.currconv.com/api/v7/convert?apiKey=' +\r\n        process.env.REACT_APP_CURRCONV_API_KEY +\r\n        '&q=' +\r\n        inCurrencyType +\r\n        '_' +\r\n        outCurrencyType +\r\n        '&compact=y'\r\n    )\r\n  ).json();\r\n  return data[`${inCurrencyType}_${outCurrencyType}`].val;\r\n}\r\n","import { useQuery, UseQueryOptions, UseQueryResult } from 'react-query';\r\nimport { TCurrencyTypes, IApiErrorObject } from 'shared/globalTypes';\r\n\r\ninterface IApiCurrencyTypes {\r\n  results: TCurrencyTypes;\r\n}\r\n\r\nexport const useCurrencyTypesQuery = (\r\n  options?: Omit<\r\n    UseQueryOptions<TCurrencyTypes, IApiErrorObject>,\r\n    'queryKey' | 'queryFn'\r\n  >\r\n): UseQueryResult<TCurrencyTypes, IApiErrorObject> => {\r\n  return useQuery('/getCurrencyTypes', () => getCurrencyTypes(), options);\r\n};\r\n\r\nasync function getCurrencyTypes(): Promise<TCurrencyTypes | never> {\r\n  const data: IApiCurrencyTypes = await (\r\n    await fetch(\r\n      'https://free.currconv.com/api/v7/currencies?apiKey=' +\r\n        process.env.REACT_APP_CURRCONV_API_KEY\r\n    )\r\n  ).json();\r\n\r\n  return data.results;\r\n}\r\n","import * as yup from 'yup';\r\n\r\nconst currencyValueSchema = yup\r\n  .number()\r\n  .typeError('Musi byc liczba')\r\n  .min(0, 'Musi byc wieksza od 0');\r\n\r\nconst currencyTypeSchema = yup.string().required('Waluta jest wymagana');\r\n\r\nexport const schema = yup.object({\r\n  inCurrencyValue: currencyValueSchema,\r\n  outCurrencyValue: currencyValueSchema,\r\n  inCurrencyType: currencyTypeSchema,\r\n  outCurrencyType: currencyTypeSchema\r\n});\r\n","export const dictionary = {\r\n  currencyCalculatorDict: {\r\n    mainHeading: 'Konwerter walut',\r\n    convertButton: 'KONWERTUJ',\r\n    currencyTypesLoadingError: 'Nie można załadowac danych',\r\n    conversionError: 'Nie udało wykonać się żadanej operacji'\r\n  },\r\n  currencyHistoryDict: {\r\n    clearHistoryButton: 'Wyczysc Historie',\r\n    toggleHistoryView: {\r\n      show: 'Pokaż historię',\r\n      hide: 'Ukryj historię'\r\n    },\r\n    table: {\r\n      sourceCurrencyHeading: 'Przed',\r\n      targetCurrencyHeading: 'Po',\r\n      dateHeading: 'Data Konwersji'\r\n    }\r\n  },\r\n  errorPageDict: {\r\n    mainHeading: 'Nastąpił nieoczekwiany błąd',\r\n    subHeading: 'Załaduj ponownie stronę'\r\n  }\r\n};\r\n","import { FC, useContext, useState } from 'react';\r\nimport { Stack, CircularProgress } from '@mui/material';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport SwapHorizIcon from '@mui/icons-material/SwapHoriz';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { Snackbar, Alert } from '@mui/material';\r\nimport { ICurrencyFormFields, TCurrencyTypes } from 'shared/globalTypes';\r\nimport {\r\n  RootStyle,\r\n  Heading,\r\n  CustomStyledButton,\r\n  MainFormButtonsWrapper,\r\n  CurrencyTypesWrapper,\r\n  SubHeading\r\n} from 'styles/CurrencyCalcualtorStyles';\r\nimport { CurrencyValueInput } from 'components/formFields/CurrencyValueInput';\r\nimport { CurrencyTypeInput } from 'components/formFields/CurrencyTypeInput';\r\nimport { HistoryDataContext } from 'components/historyData/historyDataContext';\r\nimport { FormLayoutWrapper } from 'styles/app';\r\nimport { CurrencyValueResult } from 'components/formFields/CurrencyValueResult';\r\nimport { getExchangeRate } from 'api/currencyExchangeRate';\r\nimport { useCurrencyTypesQuery } from 'api/currencyTypes';\r\nimport { schema } from 'shared/currencyFormYupShema';\r\nimport { dictionary } from 'dictionary';\r\n\r\nconst { currencyCalculatorDict } = dictionary;\r\n\r\ntype ICurrencyExchangeFormProps =\r\n  | {\r\n      currencyTypes: TCurrencyTypes;\r\n      errorCallback: () => void;\r\n      submitCallback: (data: ICurrencyFormFields) => void;\r\n      disabled?: false;\r\n      disabledMessage?: never;\r\n    }\r\n  | {\r\n      currencyTypes?: never;\r\n      errorCallback?: never;\r\n      submitCallback?: never;\r\n      disabled: true;\r\n      disabledMessage: string;\r\n    };\r\n\r\nexport const CurrencyCalcualtor: FC = () => {\r\n  const [open, setOpen] = useState<boolean>(false);\r\n  const { data: currencyTypesData, status } = useCurrencyTypesQuery();\r\n\r\n  const historyDataContext = useContext(HistoryDataContext);\r\n\r\n  const showErrorAlert = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <RootStyle>\r\n      <Heading>{currencyCalculatorDict.mainHeading}</Heading>\r\n      <FormLayoutWrapper>\r\n        {status === 'loading' && (\r\n          <Stack alignItems=\"center\" justifyContent=\"center\">\r\n            <CircularProgress />\r\n          </Stack>\r\n        )}\r\n        {status === 'error' && (\r\n          <SubHeading>\r\n            {currencyCalculatorDict.currencyTypesLoadingError}\r\n          </SubHeading>\r\n        )}\r\n        {status === 'success' && currencyTypesData && (\r\n          <CurrencyExchangeForm\r\n            currencyTypes={currencyTypesData}\r\n            errorCallback={showErrorAlert}\r\n            submitCallback={(data: ICurrencyFormFields) =>\r\n              historyDataContext.push(data)\r\n            }\r\n          />\r\n        )}\r\n      </FormLayoutWrapper>\r\n\r\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"error\">\r\n          {currencyCalculatorDict.conversionError}\r\n        </Alert>\r\n      </Snackbar>\r\n    </RootStyle>\r\n  );\r\n};\r\n\r\nconst CurrencyExchangeForm: FC<ICurrencyExchangeFormProps> = ({\r\n  currencyTypes = {},\r\n  errorCallback,\r\n  submitCallback,\r\n  disabled\r\n}) => {\r\n  const methods = useForm<ICurrencyFormFields>({\r\n    defaultValues: {\r\n      inCurrencyValue: 0,\r\n      outCurrencyValue: 0,\r\n      inCurrencyType: '',\r\n      outCurrencyType: ''\r\n    },\r\n    resolver: yupResolver(schema),\r\n    mode: 'onBlur'\r\n  });\r\n  const {\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n    setValue,\r\n    getValues\r\n  } = methods;\r\n\r\n  const onSubmit = (data: ICurrencyFormFields) => {\r\n    if (!data.inCurrencyValue) return false;\r\n    getExchangeRate({\r\n      inCurrencyType: data.inCurrencyType,\r\n      outCurrencyType: data.outCurrencyType\r\n    })\r\n      .then((rate) => {\r\n        const outCurrencyValue = data.inCurrencyValue * rate;\r\n        setValue('outCurrencyValue', outCurrencyValue, { shouldDirty: false });\r\n\r\n        submitCallback && submitCallback({ ...data, outCurrencyValue });\r\n      })\r\n      .catch(() => errorCallback && errorCallback());\r\n  };\r\n\r\n  const swapCurrencyTypes = () => {\r\n    const CurrencyTypeIn = getValues('inCurrencyType');\r\n    const CurrencyTypeOut = getValues('outCurrencyType');\r\n\r\n    setValue('inCurrencyType', CurrencyTypeOut, { shouldDirty: true });\r\n    setValue('outCurrencyType', CurrencyTypeIn, { shouldDirty: true });\r\n  };\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <CurrencyValueInput\r\n          name=\"inCurrencyValue\"\r\n          adormentFieldName=\"inCurrencyType\"\r\n          placeholder=\"Wpisz kwote\"\r\n          fullWidth\r\n          disabled={disabled}\r\n        />\r\n        <CurrencyTypesWrapper>\r\n          <CurrencyTypeInput\r\n            autoComplete={true}\r\n            autoSelect={true}\r\n            data={currencyTypes}\r\n            placeholder=\"z\"\r\n            name=\"inCurrencyType\"\r\n            disabled={disabled}\r\n          />\r\n          <div onClick={swapCurrencyTypes}>\r\n            <SwapHorizIcon />\r\n          </div>\r\n          <CurrencyTypeInput\r\n            autoComplete={true}\r\n            autoSelect={true}\r\n            data={currencyTypes}\r\n            placeholder=\"do\"\r\n            name=\"outCurrencyType\"\r\n            disabled={disabled}\r\n          />\r\n        </CurrencyTypesWrapper>\r\n        <MainFormButtonsWrapper>\r\n          <CustomStyledButton\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            loading={isSubmitting}\r\n          >\r\n            {currencyCalculatorDict.convertButton}\r\n          </CustomStyledButton>\r\n        </MainFormButtonsWrapper>\r\n        <CurrencyValueResult\r\n          name=\"outCurrencyValue\"\r\n          disabled\r\n          adormentFieldName=\"outCurrencyType\"\r\n          placeholder=\"Wynik\"\r\n        />\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n","import { Button, Table } from '@mui/material';\r\nimport { styled } from '@mui/material/styles';\r\n\r\ninterface ILabelTypeProp {\r\n  vertical?: boolean;\r\n}\r\n\r\ninterface IIsOpenProp {\r\n  isOpen?: boolean;\r\n}\r\n\r\nexport const CustomButtonsWrapper = styled('div', {\r\n  shouldForwardProp: (prop) => prop !== 'vertical'\r\n})<ILabelTypeProp>(({ vertical = false }) => ({\r\n  display: 'flex',\r\n  flexDirection: 'row',\r\n  ...(vertical\r\n    ? { alignItems: 'center', height: '100%' }\r\n    : { justifyContent: 'space-evenly' })\r\n}));\r\n\r\nexport const CustomButton = styled(Button, {\r\n  shouldForwardProp: (prop) => prop !== 'vertical'\r\n})<ILabelTypeProp>(({ theme, vertical = false }) => ({\r\n  minWidth: '30px',\r\n  lineHeight: 1,\r\n  '& .MuiButton-startIcon': {\r\n    margin: theme.spacing(0.1)\r\n  },\r\n  ...(vertical\r\n    ? {\r\n        textOrientation: 'sideways',\r\n        writingMode: 'vertical-rl',\r\n        padding: `${theme.spacing(1)} ${theme.spacing(0.5)}`,\r\n        margin: 0\r\n      }\r\n    : {\r\n        margin: theme.spacing(0.5),\r\n        [theme.breakpoints.down('sm')]: {\r\n          fontSize: '1rem'\r\n        }\r\n      })\r\n}));\r\n\r\nexport const TableWrapper = styled('div')(() => ({\r\n  width: '100%',\r\n  flexGrow: 1,\r\n  overflowY: 'auto',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  justifyContent: 'space-between',\r\n  margin: 1,\r\n  padding: 1,\r\n  '& .MuiPaper-root': {\r\n    backgroundColor: 'rgba(0, 0, 0, 0)'\r\n  }\r\n}));\r\n\r\nexport const StyledTable = styled(Table)(({ theme }) => ({\r\n  border: '1px solid white',\r\n  '& .MuiTableCell-body,.MuiTableCell-head': {\r\n    color: theme.palette.common.white\r\n  },\r\n  scrollbarColor: `${theme.palette.common.white} ${theme.palette.common.black}`\r\n}));\r\n\r\nexport const RootStyle = styled('div', {\r\n  shouldForwardProp: (prop) => prop !== 'isOpen'\r\n})<IIsOpenProp>(({ theme, isOpen = false }) => ({\r\n  backgroundColor: theme.palette.primary.main,\r\n  border: '1px solid grey',\r\n  boxShadow: '0px 0px 5px grey',\r\n  borderRadius: '10px',\r\n  height: '400px',\r\n  width: isOpen ? '400px' : '70px',\r\n  [theme.breakpoints.up('md')]: {\r\n    width: isOpen ? '500px' : '70px',\r\n    height: '500px'\r\n  },\r\n  margin: 4,\r\n  padding: 8,\r\n  paddingLeft: 30,\r\n  transform: 'translateX(-30px)',\r\n  [theme.breakpoints.down('sm')]: {\r\n    transform: 'translateY(-30px)',\r\n    paddingTop: '30px'\r\n  },\r\n  display: 'flex',\r\n  flexDirection: 'column'\r\n}));\r\n","import { FC, ReactElement, useContext } from 'react';\r\nimport {\r\n  Paper,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow\r\n} from '@mui/material';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport ArrowRightAltIcon from '@mui/icons-material/ArrowRightAlt';\r\nimport { IHistoryData } from 'shared/globalTypes';\r\nimport { HistoryDataContext } from 'components/historyData/historyDataContext';\r\nimport {\r\n  TableWrapper,\r\n  CustomButton,\r\n  CustomButtonsWrapper,\r\n  StyledTable,\r\n  RootStyle\r\n} from 'styles/CalculatorHistoryStyles';\r\nimport { dictionary } from 'dictionary';\r\n\r\nexport interface HistoryStylesProps {\r\n  isOpen: boolean;\r\n}\r\n\r\nconst { currencyHistoryDict } = dictionary;\r\n\r\nexport const CalculatorHistory: FC<HistoryStylesProps> = ({ isOpen }) => {\r\n  const history = useHistory();\r\n  const historyDataContext = useContext(HistoryDataContext);\r\n\r\n  const toggleHistoryPage = () =>\r\n    isOpen ? history.push('/') : history.push('/history');\r\n\r\n  const transferHistoryData = historyDataContext?.get();\r\n\r\n  return (\r\n    <RootStyle isOpen={isOpen}>\r\n      {isOpen ? (\r\n        <>\r\n          <HistoryDataTable data={transferHistoryData} />\r\n          <CustomButtonsWrapper>\r\n            <CustomButton\r\n              variant=\"outlined\"\r\n              color=\"secondary\"\r\n              onClick={() => historyDataContext.clear()}\r\n            >\r\n              {currencyHistoryDict.clearHistoryButton}\r\n            </CustomButton>\r\n            <HistoryHeading\r\n              isOpened={true}\r\n              toggleHistoryPageCallback={() => toggleHistoryPage()}\r\n            />\r\n          </CustomButtonsWrapper>\r\n        </>\r\n      ) : (\r\n        <CustomButtonsWrapper vertical>\r\n          <HistoryHeading\r\n            isOpened={false}\r\n            toggleHistoryPageCallback={() => toggleHistoryPage()}\r\n          />\r\n        </CustomButtonsWrapper>\r\n      )}\r\n    </RootStyle>\r\n  );\r\n};\r\n\r\nfunction HistoryDataTable({\r\n  data\r\n}: {\r\n  data: Array<IHistoryData>;\r\n}): ReactElement {\r\n  return (\r\n    <TableWrapper>\r\n      <TableContainer component={Paper}>\r\n        <StyledTable aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell style={{ width: '50%' }}>\r\n                {currencyHistoryDict.table.dateHeading}\r\n              </TableCell>\r\n              <TableCell style={{ width: '20%' }} align=\"center\">\r\n                {currencyHistoryDict.table.sourceCurrencyHeading}\r\n              </TableCell>\r\n              <TableCell style={{ width: '10%' }} align=\"center\"></TableCell>\r\n              <TableCell style={{ width: '20%' }} align=\"center\">\r\n                {currencyHistoryDict.table.targetCurrencyHeading}\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {data.map((row: IHistoryData) => (\r\n              <TableRow\r\n                key={\r\n                  row.dateOfConversion.toString() +\r\n                  row.inCurrencyValue.toString() +\r\n                  row.inCurrencyType.toString()\r\n                }\r\n              >\r\n                <TableCell style={{ width: '50%' }} scope=\"row\">\r\n                  {row.dateOfConversion\r\n                    .toISOString()\r\n                    .replace('T', ' ')\r\n                    .replace(/.\\d\\d\\dZ/, '')}\r\n                </TableCell>\r\n                <TableCell style={{ width: '20%' }} align=\"center\">\r\n                  {(row.inCurrencyValue as number).toFixed(2) +\r\n                    ' ' +\r\n                    row.inCurrencyType}\r\n                </TableCell>\r\n                <TableCell style={{ width: '5%' }} align=\"center\">\r\n                  <ArrowRightAltIcon />\r\n                </TableCell>\r\n                <TableCell style={{ width: '20%' }} align=\"center\">\r\n                  {(row.outCurrencyValue as number).toFixed(2) +\r\n                    ' ' +\r\n                    row.outCurrencyType}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </StyledTable>\r\n      </TableContainer>\r\n    </TableWrapper>\r\n  );\r\n}\r\n\r\nfunction HistoryHeading({\r\n  isOpened,\r\n  toggleHistoryPageCallback\r\n}: {\r\n  isOpened: boolean;\r\n  toggleHistoryPageCallback: VoidFunction;\r\n}): ReactElement {\r\n  return (\r\n    <CustomButtonsWrapper>\r\n      <CustomButton\r\n        vertical={!isOpened}\r\n        color=\"secondary\"\r\n        variant=\"outlined\"\r\n        size=\"small\"\r\n        startIcon={isOpened ? <CloseIcon /> : undefined}\r\n        onClick={toggleHistoryPageCallback}\r\n      >\r\n        {isOpened\r\n          ? currencyHistoryDict.toggleHistoryView.hide\r\n          : currencyHistoryDict.toggleHistoryView.show}\r\n      </CustomButton>\r\n    </CustomButtonsWrapper>\r\n  );\r\n}\r\n","import { FC, ReactElement, useCallback, useEffect, useState } from 'react';\r\nimport { IHistoryData, ICurrencyFormFields } from 'shared/globalTypes';\r\nimport { HistoryDataContext } from 'components/historyData/historyDataContext';\r\n\r\ninterface IHistoryDataProviderProps {\r\n  loader?: ReactElement;\r\n}\r\n\r\nexport const HistoryDataProvider: FC<IHistoryDataProviderProps> = ({\r\n  children\r\n}) => {\r\n  const [historyData, setHistoryData] = useState<Array<IHistoryData>>([]);\r\n\r\n  useEffect(() => {\r\n    const localData: string | null = localStorage.getItem(\r\n      'currencyConversionHistoryData'\r\n    );\r\n\r\n    if (localData) {\r\n      const currencyConversionHistoryData: Array<IHistoryData> = JSON.parse(\r\n        localData,\r\n        function (key: string, value: string) {\r\n          if (key === 'dateOfConversion') return new Date(value);\r\n          return value;\r\n        }\r\n      );\r\n      setHistoryData(currencyConversionHistoryData);\r\n    }\r\n  }, []);\r\n\r\n  const get = useCallback((): Array<IHistoryData> => {\r\n    return historyData;\r\n  }, [historyData]);\r\n\r\n  const push = useCallback(\r\n    (data: ICurrencyFormFields): void => {\r\n      const newHistoryDataEntity: IHistoryData = {\r\n        ...data,\r\n        dateOfConversion: new Date()\r\n      };\r\n\r\n      const newHistoryData: Array<IHistoryData> = [\r\n        newHistoryDataEntity,\r\n        ...historyData\r\n      ];\r\n      setHistoryData(newHistoryData);\r\n      localStorage.setItem(\r\n        'currencyConversionHistoryData',\r\n        JSON.stringify(newHistoryData)\r\n      );\r\n    },\r\n    [historyData]\r\n  );\r\n\r\n  const clear = useCallback((): void => {\r\n    setHistoryData([]);\r\n    localStorage.removeItem('currencyConversionHistoryData');\r\n  }, []);\r\n\r\n  return (\r\n    <HistoryDataContext.Provider value={{ get, push, clear }}>\r\n      {children}\r\n    </HistoryDataContext.Provider>\r\n  );\r\n};\r\n","import { createTheme } from '@mui/material/styles';\r\n\r\nexport const theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#1C5CC5',\r\n      contrastText: '#FFFFFF',\r\n      dark: '#454860',\r\n      light: '#3578EB'\r\n    },\r\n    secondary: {\r\n      main: '#FFFFFF',\r\n      contrastText: '#1C5CC5',\r\n      dark: '#C2CBD9',\r\n      light: '#3578EB'\r\n    }\r\n  },\r\n  typography: {\r\n    fontFamily: 'Lora, serif',\r\n    fontWeightMedium: 'bold',\r\n    fontWeightRegular: 'bold'\r\n  },\r\n  components: {\r\n    MuiCssBaseline: {\r\n      styleOverrides: {\r\n        body: {\r\n          margin: 0,\r\n          minHeight: '100vh',\r\n          background: 'linear-gradient(60deg, #1C5CC5 46%,#ffffff 54%)',\r\n          '& div#root': {\r\n            minHeight: 'inherit'\r\n          }\r\n        },\r\n        a: {\r\n          textDecoration: 'none',\r\n          color: 'black'\r\n        },\r\n        '.MuiAutocomplete-option': {\r\n          fontSize: '1rem'\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n","import { ReactElement, useRef } from 'react';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport { CircularProgress, CssBaseline } from '@mui/material';\r\nimport { ThemeProvider } from '@mui/material/styles';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\nimport { CurrencyCalcualtor } from 'pages/CurrencyCalcualtor';\r\nimport { CalculatorHistory } from 'pages/CalculatorHistory';\r\nimport { HistoryDataProvider } from 'components/historyData/historyDataProvider';\r\nimport { RootElementStyle } from 'styles/app';\r\nimport { theme } from 'styles/defualtTheme';\r\n\r\nfunction App(): ReactElement {\r\n  const queryClientRef = useRef<QueryClient>();\r\n  if (!queryClientRef.current) {\r\n    queryClientRef.current = new QueryClient({\r\n      defaultOptions: {\r\n        queries: {\r\n          refetchOnWindowFocus: false,\r\n          refetchOnMount: false,\r\n          retry: 2,\r\n          staleTime: 2 * 60 * 1000\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClientRef.current}>\r\n      <HistoryDataProvider loader={<CircularProgress />}>\r\n        <ThemeProvider theme={theme}>\r\n          <CssBaseline />\r\n          <RootElementStyle>\r\n            <BrowserRouter>\r\n              <Switch>\r\n                <Route path=\"/history\">\r\n                  <CurrencyCalcualtor />\r\n                  <CalculatorHistory isOpen={true} />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <CurrencyCalcualtor />\r\n                  <CalculatorHistory isOpen={false} />\r\n                </Route>\r\n              </Switch>\r\n            </BrowserRouter>\r\n          </RootElementStyle>\r\n        </ThemeProvider>\r\n      </HistoryDataProvider>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { FC } from 'react';\r\nimport { Typography } from '@mui/material';\r\nimport { RootStyle, Heading } from 'styles/CurrencyCalcualtorStyles';\r\nimport { dictionary } from 'dictionary';\r\n\r\nconst { errorPageDict } = dictionary;\r\n\r\nexport const ErrorPage: FC = () => {\r\n  return (\r\n    <RootStyle>\r\n      <Heading>{errorPageDict.mainHeading}</Heading>\r\n      <Typography textAlign=\"center\">{errorPageDict.subHeading}</Typography>\r\n    </RootStyle>\r\n  );\r\n};\r\n","import { Component, ReactNode } from 'react';\r\nimport { ErrorPage } from 'pages/error';\r\n\r\ninterface ErrorBoundaryInterface {\r\n  hasError: boolean;\r\n}\r\n\r\nexport class ErrorBoundary extends Component<unknown, ErrorBoundaryInterface> {\r\n  constructor(props: unknown) {\r\n    super(props);\r\n    this.state = { hasError: false };\r\n  }\r\n\r\n  static getDerivedStateFromError(): ErrorBoundaryInterface {\r\n    return { hasError: true };\r\n  }\r\n\r\n  render(): ReactNode {\r\n    if (this.state.hasError) {\r\n      return <ErrorPage />;\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from 'App';\r\nimport { ErrorBoundary } from 'components/ErrorBoundary';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ErrorBoundary>\r\n      <App />\r\n    </ErrorBoundary>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}